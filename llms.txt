# Sightline SDK

> A cross-platform visibility tracking SDK written in Kotlin Multiplatform. It enables developers to consistently detect when UI elements are visible to users on Android, iOS, and Web, based on customizable thresholds for duration and visibility percentage. The SDK is designed to be framework-agnostic and lightweight, making it easy to integrate into any native application stack.

Sightline provides a consistent interface for tracking visibility events across platforms, with a shared core logic and platform-specific adapters for Android Views/Compose, iOS UIKit/SwiftUI, and web-based DOM environments.

## Specification
- [Sightline KMP Plan](sightline_kmp_plan.md): Detailed breakdown of the SDK implementation plan, including CI/CD setup, platform integration phases, and project structure.

## Issues
- [Sightline KMP Issues](sightline_kmp_issues.md): GitHub-style issue list with tasks broken down by platform and phase (Android, iOS, Web, and shared code).

## Repository Setup
- [Sightline Repo Setup](sightline_repo_setup.md): Label conventions, milestone structure, and project management guidelines for tracking development on GitHub.

## Scripts

- `scripts/push-and-watch.sh`  
  Commits changes, pushes to `main`, waits for GitHub Actions to complete, and prints the result.  
  **Usage:**  
      ./scripts/push-and-watch.sh "your commit message"

## Agent Instructions

- Open the list of GitHub issues. Start with **open issues in `Phase 1: CI/CD and Project Setup`** milestone.
- Pick one unassigned issue and begin implementing it. Follow the description and any referenced plan items.
- Run:  
      ./scripts/verify.sh  
  to validate the implementation across shared, Android, and Web targets.
- Commit and push your changes:  
      ./scripts/push-and-watch.sh "your commit message"  
  This will wait for GitHub Actions to pass. **Only proceed if CI is successful.**
- Mark the issue as resolved or leave a comment with results. Then begin the next available issue in milestone order.

## Guidelines
- Never skip CI.
- Always work from the issue list, not directly from `sightline_kmp_plan.md`.
- Do not merge unverified code.
- Keep commits atomic and scoped to a single issue.
